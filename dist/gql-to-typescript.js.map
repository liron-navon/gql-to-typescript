{"version":3,"sources":["webpack://gqlToTypescript/webpack/universalModuleDefinition","webpack://gqlToTypescript/webpack/bootstrap","webpack://gqlToTypescript/./src/helpers/FileWriter.ts","webpack://gqlToTypescript/./src/helpers/TypescriptFileWriter.ts","webpack://gqlToTypescript/./src/helpers/files.ts","webpack://gqlToTypescript/./src/helpers/gqlNodeTools.ts","webpack://gqlToTypescript/./src/index.ts","webpack://gqlToTypescript/external \"fs\"","webpack://gqlToTypescript/external {\"commonjs\":\"glob\",\"commonjs2\":\"glob\",\"amd\":\"glob\"}","webpack://gqlToTypescript/external {\"commonjs\":\"graphql-tag\",\"commonjs2\":\"graphql-tag\",\"amd\":\"graphql-tag\"}","webpack://gqlToTypescript/external {\"commonjs\":\"lodash/defaultsDeep\",\"commonjs2\":\"lodash/defaultsDeep\",\"amd\":\"lodash/defaultsDeep\"}","webpack://gqlToTypescript/external \"path\""],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AClFA,2EAA4C;AAE5C,IAAM,EAAE,GAAG,mBAAO,CAAC,cAAI,CAAC,CAAC;AAEzB;;GAEG;AACH;IACI,oBAAoB,QAAQ;QAAR,aAAQ,GAAR,QAAQ;QACxB,2BAAmB,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IACM,+BAAU,GAAjB,UAAkB,GAAW;QACzB,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAK,GAAK,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC;IAChB,CAAC;IACM,2BAAM,GAAb;QACI,OAAO,OAAO,CAAC,OAAO,EAAE;IAC5B,CAAC;IACL,iBAAC;AAAD,CAAC;AAXY,gCAAU;;;;;;;;;;;;;;;ACPvB,0FAAwC;AAExC,gGAA8C;AAE9C,IAAM,IAAI,GAAG,mBAAO,CAAC,kBAAM,CAAC,CAAC;AAE7B;IAII,8BAAoB,OAAsB,EAAU,WAAmB,EAAE,YAAoB;QAAzE,YAAO,GAAP,OAAO,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAQ;QACnE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,CAAC,EAAE,GAAG,IAAI,uBAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5C,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACjC,IAAI,OAAO,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,sBAAoB,OAAO,CAAC,SAAS,OAAI,CAAC,CAAC;SACjE;IACL,CAAC;IAED,qCAAM,GAAN,UAAO,GAAW;QACd,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,+CAAgB,GAAhB,UAAiB,WAAmB,EAAE,WAAmB;QACrD,IAAI,WAAW,EAAE;YACb,IAAI,CAAC,MAAM,CAAI,WAAW,WAAM,WAAW,QAAK,CAAC,CAAC;SACrD;IACL,CAAC;IAED,wCAAS,GAAT,UAAU,IAAY,EAAE,YAA2B,EAAE,cAAsB;QAA3E,iBAKC;QAJG,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,CAAC,mBAAiB,IAAI,OAAI,CAAC,CAAC;QACvC,YAAY,CAAC,OAAO,CAAC,WAAC,IAAI,YAAI,CAAC,MAAM,CAAC,SAAO,CAAC,MAAG,CAAC,EAAxB,CAAwB,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAEO,wCAAS,GAAjB,UAAkB,WAAmB;QACjC,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC;IAClD,CAAC;IAEO,2DAA4B,GAApC,UAAqC,KAAa,EAAE,OAAY;QAAhE,iBAaC;QAZG,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,IAAI,OAAO,CAAC,IAAI,KAAK,UAAU,EAAE;YACtB,mCAAU,EAAE,mBAAI,CAAY;YACnC,IAAM,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,UAAC,EAAsB;oBAArB,cAAI,EAAE,sBAAQ,EAAE,cAAI;gBACtD,OAAO,KAAG,IAAI,IAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,WAAK,KAAI,CAAC,SAAS,CAAC,IAAI,CAAG,CAAC;YACpE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACd,YAAY,GAAG,MAAI,kBAAkB,aAAQ,IAAI,CAAC,SAAS,CAAC,UAAU,CAAG,CAAC;SAC7E;aAAM;YACH,mBAAmB;YACnB,OAAO,CAAC,IAAI,CAAC,mBAAiB,KAAO,CAAC,CAAC;SAC1C;QACD,OAAO,SAAO,KAAK,WAAM,YAAY,MAAG,CAAC;IAC7C,CAAC;IAEO,wDAAyB,GAAjC,UAAkC,KAAa,EAAE,OAAe;QAC5D,iDAAiD;QACjD,IAAM,YAAY,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAM,SAAS,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;QACxC,iDAA4C,EAA3C,cAAI,EAAE,sBAAqC,CAAC;QACnD,OAAO,SAAO,KAAK,IAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,WAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,YAAY,MAAG,CAAC;IACzF,CAAC;IAEO,0DAA2B,GAAnC,UAAoC,KAAa,EAAE,OAAe;QACxD,+CAA0C,EAAzC,cAAI,EAAE,sBAAmC,CAAC;QACjD,OAAO,SAAO,KAAK,IAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,WAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAG,CAAC;IAC1E,CAAC;IAED,6CAAc,GAAd,UAAe,IAAY,EAAE,IAAY,EAAE,cAAsB;QAAjE,iBAgBC;QAfG,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,CAAC,wBAAsB,IAAI,OAAI,CAAC,CAAC;QAC5C,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,EAAgB;gBAAf,aAAK,EAAE,eAAO;YACzC,KAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,cAAc,CAAI,IAAI,UAAK,KAAO,CAAC,CAAC,CAAC;YACjE,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAC7B,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACnD,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;iBAC9D;qBAAM;oBACH,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;iBAChE;aACJ;iBAAM;gBACH,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,4BAA4B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;aACjE;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,qCAAM,GAAN,UAAO,MAAuB;QAAvB,uCAAuB;QACpB,aAA2C,EAAhC,gCAAS,EAAG,8BAAoB,CAAC;QAClD,OAAO,IAAI,CAAC,EAAE;aACT,UAAU,CAAC,GAAG,CAAC;aACf,UAAU,CAAC,EAAE,CAAC;aACd,MAAM,EAAE;aACR,IAAI,CAAC;YACF,IAAI,CAAC,MAAM,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,wHAGL,SAAS,iBAAY,YAAY,qBAC/C,CAAC,CAAC;aACE;QACL,CAAC,CAAC;IACV,CAAC;IACL,2BAAC;AAAD,CAAC;AAjGY,oDAAoB;AAmGjC;;;GAGG;AACH,SAAS,eAAe,CAAC,SAAiB;IACtC,IAAM,eAAe,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;IACxD,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACxC,CAAC;AAED;;;GAGG;AACH,SAAS,kBAAkB,CAAC,SAAiB;IACzC,OAAO,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;AACzC,CAAC;;;;;;;;;;;;;;;;;;;ACxHD,0EAA8B;AAC9B,mDAA4B;AAC5B,6CAAyB;AACzB,mDAA6B;AAE7B;;;GAGG;AACH,SAAgB,mBAAmB,CAAC,WAAW;IAC3C,oCAAoC;IACpC,aAAa;IACb,8FAA8F;IAC9F,aAAa;IACb,IAAM,GAAG,GAAG,iEAAiE,CAAC;IAE9E,IAAI,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACpC,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,OAAO,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;QAC1C,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACnD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAChD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrB,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACnC;IACD,OAAO,OAAO,CAAC;AACnB,CAAC;AAjBD,kDAiBC;AAED;;;GAGG;AACH,SAAgB,oBAAoB,CAAC,OAAe;IAChD,OAAO,IAAI,OAAO,CAAgB,UAAC,OAAO,EAAE,MAAM;QAC9C,OAAO,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE,UAAC,GAAG,EAAE,SAAS,IAAK,UAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAtC,CAAsC,CAAC;IACxF,CAAC,CAAC;AACN,CAAC;AAJD,oDAIC;AAED;;;;GAIG;AACH,SAAgB,kBAAkB,CAAC,OAAe,EAAE,cAA8B;IAA9B,sDAA8B;IAC9E,OAAO,oBAAoB,CAAC,OAAO,CAAC;SAC/B,IAAI,CAAC,mBAAS;QACX,iCAAiC;QACjC,OAAO,SAAS,CAAC,GAAG,CAAC,UAAC,QAAQ;YAC1B,IAAM,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAClD,OAAO,mBAAmB,CAAC,OAAO,CAAC;QACvC,CAAC,CAAC;aACD,MAAM,CAAC,UAAC,GAAG,EAAE,QAAQ,IAAK,UAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAApB,CAAoB,EAAE,EAAE,CAAC;aACnD,GAAG,CAAC,UAAC,IAAI;YACN,OAAO,cAAc,CAAC,CAAC,CAAC,qBAAG,2EAAG,EAAI,EAAE,KAAN,IAAI,EAAG,CAAC,CAAC,IAAI;QAC/C,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;AACX,CAAC;AAbD,gDAaC;AAED;;;;;GAKG;AACH,SAAgB,mBAAmB,CAAC,QAAgB,EAAE,aAAoB;IAApB,oDAAoB;IACtE,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACvC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;QACzB,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;KAC9C;IAED,IAAM,OAAO,GAAG,aAAa,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IACpD,EAAE,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;AAC5C,CAAC;AARD,kDAQC;;;;;;;;;;;;;;;;ACtED;;;GAGG;AACH,SAAgB,OAAO,CAAC,IAAI;IACxB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AAC3B,CAAC;AAFD,0BAEC;AAED;;;GAGG;AACH,SAAgB,WAAW,CAAC,IAAI;IAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1B,CAAC;AAFD,kCAEC;AAED;;;GAGG;AACH,SAAgB,cAAc,CAAC,IAAI;IAC/B,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;AAC5D,CAAC;AAFD,wCAEC;AAED,oDAAoD;AACpD,SAAS,qBAAqB,CAAC,IAAI;IAC/B,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IACxC,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,OAAO;QACpC,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QACjC,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QAC3B,gCAA4C,EAA1C,cAAI,EAAE,sBAAoC,CAAC;QACnD,OAAO;YACH,IAAI,EAAE,OAAO;YACb,QAAQ;YACR,IAAI;SACP,CAAC;IACN,CAAC,CAAC,CAAC;IACH,OAAO;QACH,IAAI,EAAE,UAAU;QAChB,IAAI;QACJ,UAAU;KACb,CAAC;AACN,CAAC;AAED,SAAS,kBAAkB,CAAC,aAAa;IACrC,IAAI,QAAQ,GAAG,EAAE,CAAC;IAClB,IAAI,WAAW,GAAG,aAAa,CAAC;IAChC,OAAO,WAAW,CAAC,IAAI,KAAK,WAAW,EAAE;QACrC,QAAQ,IAAI,IAAI,CAAC;QACjB,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC;KAClC;IACD,OAAO,OAAO,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC;AAC3C,CAAC;AAED;;;GAGG;AACH,SAAgB,OAAO,CAAC,IAAI;IACxB,IAAI,IAAI,CAAC,IAAI,KAAK,iBAAiB,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,EAAE;QACzE,IAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,aAAa,GAAG,KAAK,CAAC;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QACzB,IAAI,IAAI,KAAK,aAAa,EAAE;YACxB,aAAa,GAAG,IAAI,CAAC;YACrB,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;SAC5B;QACD,IAAI,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;YAC9B,IAAI,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;SACvC;aAAM,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACpD,OAAO,qBAAqB,CAAC,IAAI,CAAC,CAAC;SACtC;aAAM;YACH,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC5B;QAED,OAAO,aAAa,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;KAC5C;AACL,CAAC;AApBD,0BAoBC;AAED;;;GAGG;AACH,SAAgB,UAAU,CAAC,QAAQ;IAC/B,IAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC/B,IAAM,MAAM,GAAG;QACX,GAAG,EAAE,IAAI;QACT,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,CAAC,KAAK,EAAd,CAAc,CAAC;KACtD,CAAC;IACF,IAAM,WAAW,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;IAE7C,IAAI,WAAW,EAAE;QACb,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;QAC3B,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;KAC7C;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;AAbD,gCAaC;AAED;;;;GAIG;AACH,SAAgB,YAAY,CAAC,UAAU,EAAE,YAAoB;IACzD,IAAM,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;IACjC,IAAM,KAAK,GAAG,EAAE,CAAC;IACjB,IAAM,WAAW,GAAG,EAAE,CAAC;IAEvB,IAAM,iBAAiB,GAAG,cAAc,CAAC,UAAU,CAAC,CAAC;IACrD,IAAI,iBAAiB,EAAE;QACnB,WAAW,CAAC,IAAI,CAAC,GAAG,iBAAiB,CAAC;KACzC;IAED,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;QAC5B,IAAI,GAAG,GAAG,IAAI,CAAC;QACf,IAAI,KAAK,CAAC,IAAI,KAAK,iBAAiB,IAAI,KAAK,CAAC,IAAI,KAAK,sBAAsB,EAAE;YAC3E,GAAG,GAAG,WAAW,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;SAC1C;QAED,IAAI,GAAG,EAAE;YACL,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC;YAC3B,IAAI,GAAG,CAAC,WAAW,EAAE;gBACjB,WAAW,CAAI,IAAI,UAAK,GAAG,CAAC,GAAK,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC;aACxD;SACJ;IACL,CAAC,CAAC,CAAC;IACH,OAAO;QACH,GAAG,EAAE,IAAI,EAAE,KAAK,SAAE,WAAW;KAChC;AACL,CAAC;AA1BD,oCA0BC;AAED;;;;GAIG;AACH,SAAgB,WAAW,CAAC,IAAI,EAAE,YAAoB;IAClD,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IAC3B,IAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IAE5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;QACrB,OAAO;YACH,GAAG,EAAE,IAAI;YACT,KAAK;YACL,WAAW,EAAE,cAAc,CAAC,IAAI,CAAC;SACpC,CAAC;KACL;AACL,CAAC;AAXD,kCAWC;AAED;;;GAGG;AACH,SAAgB,kBAAkB,CAAC,GAAkB;IACjD,IAAM,MAAM,GAAG,EAAE,CAAC;IAClB,GAAG,CAAC,OAAO,CAAC,UAAC,CAAC;QACV,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACrB,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAClB,CAAC;AAND,gDAMC;AAED;;;;;GAKG;AACH,SAAgB,cAAc,CAAC,IAAI;IAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACpB,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC9C,QAAQ,EAAE,IAAI;SACjB,CAAC;KACL;SAAM;QACH,OAAO;YACH,IAAI;YACJ,QAAQ,EAAE,KAAK;SAClB,CAAC;KACL;AACL,CAAC;AAZD,wCAYC;;;;;;;;;;;;;;;ACtLD,mFAAmD;AAEnD,wGAAoF;AACpF,gIAAoE;AAEpE,IAAM,YAAY,GAAG,mBAAO,CAAC,gDAAqB,CAAC,CAAC;AAEpD,IAAM,cAAc,GAAG;IACnB,OAAO,EAAE,EAAE;IACX,YAAY,EAAE,CAAC,QAAQ,CAAC;IACxB,WAAW,EAAE,EAAE;IACf,SAAS,EAAE,UAAU;IACrB,UAAU,EAAE,aAAa;IACzB,MAAM,EAAE,KAAK;CAChB,CAAC;AAEF,IAAM,WAAW,GAAG,oOAKjB,CAAC;AAES,wBAAgB,GAAG,cAAM,aAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,CAAC,EAAjC,CAAiC,CAAC;AAExE,SAAgB,YAAY,CAAC,OAAO,EAAE,OAA+B;IAA/B,sCAA+B;IACjE,OAAO,0BAAkB,CAAC,OAAO,CAAC;SAC7B,IAAI,CAAC,UAAC,QAAQ;QACX,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,EAAC,QAAQ,YAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;AACX,CAAC;AALD,oCAKC;AAED,SAAgB,OAAO,CAAC,OAAsB;IACpC,8CAA8F,EAA7F,sBAAQ,EAAE,oBAAO,EAAE,8BAAY,EAAE,4BAAW,EAAE,kBAA+C,CAAC;IAErG,IAAM,SAAS,GAAG,iCAAkB,CAAK,WAAW,QAAK,YAAY,EAAE,CAAC;IACxE,IAAM,WAAW,GAAG,YAAY,CAAC;QAC7B,OAAO,EAAE,SAAS;QAClB,MAAM,EAAE,QAAQ;QAChB,EAAE,EAAE,eAAe;QACnB,GAAG,EAAE,QAAQ;QACb,KAAK,EAAE,QAAQ;KAClB,EAAE,OAAO,CAAC,CAAC;IAEZ,IAAM,KAAK,GAAG,EAAE,CAAC;IACjB,IAAM,gBAAgB,GAAG,EAAE,CAAC;IAE5B,SAAS,aAAa,CAAC,GAAS;;QACpB,iBAAG,EAAE,iBAAK,EAAE,6BAAW,CAAS;QACxC,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE;YACZ,OAAO,YAAY,CAAC,KAAK,YAAI,GAAC,GAAG,IAAG,KAAK,MAAG;SAC/C;QACD,4BAA4B;QAC5B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;YACnB,WAAW,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;SAC1B;QAED,YAAY,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;QAC5C,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACnB,OAAO;IACX,CAAC;IAED,QAAQ,CAAC,OAAO,CAAC,aAAG;QAChB,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,IAAI;YACzB,QAAQ,IAAI,CAAC,IAAI,EAAE;gBACf,KAAK,sBAAsB,CAAC;gBAC5B,KAAK,2BAA2B,CAAC;gBACjC,KAAK,qBAAqB;oBACtB,aAAa,CAAC,2BAAY,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;oBAC7C,MAAM;gBACV,KAAK,oBAAoB;oBACrB,aAAa,CAAC,yBAAU,CAAC,IAAI,CAAC,CAAC,CAAC;oBAChC,MAAM;gBACV;oBACI,OAAO;aACd;QACL,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,IAAM,MAAM,GAAG,IAAI,2CAAoB,CAAC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;IAC3E,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAC,EAAY;YAAX,WAAG,EAAE,aAAK;QACtC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACtB,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,EAAC,gBAAgB,CAAC,CAAC;SACjD;aAAM;YACH,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAC;SACvD;IACL,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACjC,CAAC;AAxDD,0BAwDC;;;;;;;;;;;;ACxFD,+B;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,yD;;;;;;;;;;;ACAA,iE;;;;;;;;;;;ACAA,iC","file":"gql-to-typescript.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"glob\"), require(\"graphql-tag\"), require(\"lodash/defaultsDeep\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"glob\", \"graphql-tag\", \"lodash/defaultsDeep\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gqlToTypescript\"] = factory(require(\"glob\"), require(\"graphql-tag\"), require(\"lodash/defaultsDeep\"));\n\telse\n\t\troot[\"gqlToTypescript\"] = factory(root[undefined], root[undefined], root[undefined]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE_glob__, __WEBPACK_EXTERNAL_MODULE_graphql_tag__, __WEBPACK_EXTERNAL_MODULE_lodash_defaultsDeep__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import {ensureFileExistence} from \"./files\";\n\nconst fs = require('fs');\n\n/**\n * abstracts the process of writing data into a file\n */\nexport class FileWriter {\n    constructor(private filePath) {\n        ensureFileExistence(filePath);\n    }\n    public appendLine(str: string) {\n        fs.appendFileSync(this.filePath, `\\n${str}`);\n        return this;\n    }\n    public finish() {\n        return Promise.resolve()\n    }\n}\n","import {FileWriter} from './FileWriter';\nimport {GqlToTSConfig, Mapper} from \"./types\";\nimport {getTypeOptions} from \"./gqlNodeTools\";\n\nconst path = require('path');\n\nexport class TypescriptFileWriter {\n    private fw: FileWriter;\n    private readonly fullFilePath: string;\n\n    constructor(private options: GqlToTSConfig, private typedValues: Mapper, startMessage: string) {\n        this.fullFilePath = path.join(options.outputFile);\n        this.fw = new FileWriter(this.fullFilePath);\n        this.fw.appendLine(startMessage);\n        if (options.namespace) {\n            this.fw.appendLine(`export namespace ${options.namespace} {`);\n        }\n    }\n\n    append(str: string) {\n        this.fw.appendLine(str);\n        return this;\n    }\n\n    writeDescription(indentation: string, description: string) {\n        if (description) {\n            this.append(`${indentation}/* ${description} */`);\n        }\n    }\n\n    writeEnum(name: string, enumarations: Array<string>, descriptionMap: Mapper) {\n        this.writeDescription(`\\t`, descriptionMap[name]);\n        this.append(`\\texport enum ${name} {`);\n        enumarations.forEach(e => this.append(`\\t\\t${e},`));\n        this.append('\\t}');\n    }\n\n    private fixTyping(unknownType: string) {\n        return this.typedValues[unknownType] || 'any';\n    }\n\n    private createAdvancedInterfaceField(label: string, rawType: any) {\n        let advancedType = 'any';\n        if (rawType.kind === 'function') {\n            const {returnType, args} = rawType;\n            const printableArguments = args.map(({name, required, type}) => {\n                return `${name}${required ? '' : '?'}: ${this.fixTyping(type)}`;\n            }).join(', ');\n            advancedType = `(${printableArguments}) => ${this.fixTyping(returnType)}`;\n        } else {\n            // unknown field...\n            console.warn(`unknown field ${label}`);\n        }\n        return `\\t\\t${label}?: ${advancedType};`;\n    }\n\n    private createArrayInterfaceField(label: string, rawType: string) {\n        // this is in order to support 1d/2d/3d... arrays\n        const arraySymbols = getArraySymbols(rawType);\n        const childType = removeArraySymbols(rawType);\n        const {type, required} = getTypeOptions(childType);\n        return `\\t\\t${label}${required ? '' : '?'}: ${this.fixTyping(type)}${arraySymbols};`;\n    }\n\n    private createRegularInterfaceField(label: string, rawType: string) {\n        const {type, required} = getTypeOptions(rawType);\n        return `\\t\\t${label}${required ? '' : '?'}: ${this.fixTyping(type)};`;\n    }\n\n    writeInterface(name: string, data: Mapper, descriptionMap: Mapper) {\n        this.writeDescription(`\\t`, descriptionMap[name]);\n        this.append(`\\texport interface ${name} {`);\n        Object.entries(data).forEach(([label, rawType]) => {\n            this.writeDescription(`\\t`, descriptionMap[`${name}->${label}`]);\n            if (typeof rawType === \"string\") {\n                if (rawType.endsWith('[]') || rawType.endsWith('[]!')) {\n                    this.append(this.createArrayInterfaceField(label, rawType))\n                } else {\n                    this.append(this.createRegularInterfaceField(label, rawType))\n                }\n            } else {\n                this.append(this.createAdvancedInterfaceField(label, rawType))\n            }\n        });\n        this.append('\\t}')\n    }\n\n    finish(silent: boolean = false) {\n        const {options: {namespace}, fullFilePath} = this;\n        return this.fw\n            .appendLine('}')\n            .appendLine('')\n            .finish()\n            .then(() => {\n                if (!silent) {\n                    console.log(`\n                The types file was saved!.\n                You can import it like so:\n                import { ${namespace} } from '${fullFilePath}';\n            `);\n                }\n            })\n    }\n}\n\n/**\n * accept a string with an array symbols such as number[][], and returns the array symbols ('[][]')\n * @param rawString\n */\nfunction getArraySymbols(rawString: string) {\n    const numberOfMatches = rawString.match(/\\[\\]/g).length;\n    return '[]'.repeat(numberOfMatches);\n}\n\n/**\n * Accept a string with array symbols and return the type without the array part\n * @param rawString\n */\nfunction removeArraySymbols(rawString: string) {\n    return rawString.replace(/\\[\\]/g, '')\n}\n","import gql from 'graphql-tag';\nimport * as path from 'path'\nimport * as fs from 'fs';\nimport * as glob from 'glob';\n\n/**\n * find the gql tag and gets it's value using regex\n * @param fileContent\n */\nexport function getTypeDefsFromFile(fileContent) {\n    // keep older regex versions please.\n    // *********8\n    // /(gql`)[\\S\\s]*?(`;|`\\s)/g; - had issues with template syntax (${}), and it captured itself.\n    // *********8\n    const reg = /(gql`)(?!\\))[A-Za-z0-9\\s{}\"!:\\(\\)\\[\\]_-]*?((?!\\()`;|(?!\\()`\\s)/g;\n\n    let matches = reg.exec(fileContent);\n    let schemas = [];\n    while (matches != null && matches.length > 0) {\n        let gqlTag = matches[0];\n        gqlTag = gqlTag.substr(0, gqlTag.lastIndexOf('`'));\n        gqlTag = gqlTag.substr(gqlTag.indexOf('`') + 1);\n        schemas.push(gqlTag);\n        matches = reg.exec(fileContent);\n    }\n    return schemas;\n}\n\n/**\n * returning a promise from the glob function and applies needed options\n * @param matcher\n */\nexport function getFileNamesFromGlob(matcher: string) {\n    return new Promise<Array<string>>((resolve, reject) => {\n        return glob(matcher, {}, (err, fileNames) => err ? reject(err) : resolve(fileNames))\n    })\n}\n\n/**\n * matches files, extract the graphql schema and use gql to create node trees\n * @param matcher\n * @param turnToNodeTree\n */\nexport function collectGQLTypeDefs(matcher: string, turnToNodeTree: boolean = true) {\n    return getFileNamesFromGlob(matcher)\n        .then(fileNames => {\n            // map files into gql definitions\n            return fileNames.map((filePath) => {\n                const content = fs.readFileSync(filePath, \"utf8\");\n                return getTypeDefsFromFile(content)\n            })\n            .reduce((acc, contents) => acc.concat(contents), [])\n            .map((item) => {\n                return turnToNodeTree ? gql`${item}` : item\n            })\n        });\n}\n\n/**\n * Creates a file with the path to it's directory synchronously,\n * the file cam be emptied by passing true as the second parameter\n * @param filePath\n * @param makeSureEmpty\n */\nexport function ensureFileExistence(filePath: string, makeSureEmpty = true) {\n    const dirname = path.dirname(filePath);\n    if (!fs.existsSync(dirname)) {\n        fs.mkdirSync(dirname, { recursive: true });\n    }\n\n    const options = makeSureEmpty ? { flag: 'w+' } : {};\n    fs.writeFileSync(filePath, '', options);\n}\n","import {Mapper} from \"./types\";\n\n/**\n * gets the name of a given node\n * @param node\n */\nexport function getName(node) {\n    return node.name.value;\n}\n\n/**\n * get the kind of type from a node\n * @param node\n */\nexport function getTypeKind(node) {\n    return node.type.kind;\n}\n\n/**\n * gets the description from a node\n * @param node\n */\nexport function getDescription(node) {\n    return node.description ? node.description.value : null;\n}\n\n// handles type definition for Query/Mutation etc...\nfunction createTypeForFunction(node) {\n    const returnType = node.type.name.value;\n    const args = node.arguments.map((argNode) => {\n        const argName = getName(argNode);\n        const argType = getType(argNode);\n        const { type, required } = getTypeOptions(argType);\n        return {\n            name: argName,\n            required,\n            type\n        };\n    });\n    return {\n        kind: 'function',\n        args,\n        returnType\n    };\n}\n\nfunction getTypeOfArrayType(arrayTypeNode) {\n    let arrayFix = '';\n    let currentNode = arrayTypeNode;\n    while (currentNode.kind !== 'NamedType') {\n        arrayFix += '[]';\n        currentNode = currentNode.type;\n    }\n    return getName(currentNode) + arrayFix;\n}\n\n/**\n * gets the type of a node\n * @param node\n */\nexport function getType(node) {\n    if (node.kind === 'FieldDefinition' || node.kind === 'InputValueDefinition') {\n        const kind = getTypeKind(node);\n        let requiredValue = false;\n        let type = null;\n        let typeNode = node.type;\n        if (kind === 'NonNullType') {\n            requiredValue = true;\n            typeNode = typeNode.type;\n        }\n        if (typeNode.kind === 'ListType') {\n            type = getTypeOfArrayType(typeNode);\n        } else if (node.arguments && node.arguments.length > 0) {\n            return createTypeForFunction(node);\n        } else {\n            type = getName(typeNode);\n        }\n\n        return requiredValue ? type + '!' : type;\n    }\n}\n\n/**\n * returns a key value pait from an enum, optional description\n * @param enumNode\n */\nexport function getEnumKVP(enumNode) {\n    const name = getName(enumNode);\n    const output = {\n        key: name,\n        value: enumNode.values.map((val) => val.name.value)\n    };\n    const description = getDescription(enumNode);\n\n    if (description) {\n        output['description'] = {};\n        output['description'][name] = description;\n    }\n    return output;\n}\n\n/**\n * returns a key value pait from an object, optional description\n * @param objectNode\n * @param ignoreFields\n */\nexport function getObjectKVP(objectNode, ignoreFields: Mapper) {\n    const name = getName(objectNode);\n    const value = {};\n    const description = {};\n\n    const objectDescription = getDescription(objectNode);\n    if (objectDescription) {\n        description[name] = objectDescription;\n    }\n\n    objectNode.fields.forEach((field) => {\n        let kvp = null;\n        if (field.kind === 'FieldDefinition' || field.kind === 'InputValueDefinition') {\n            kvp = getFieldKVP(field, ignoreFields);\n        }\n\n        if (kvp) {\n            value[kvp.key] = kvp.value;\n            if (kvp.description) {\n                description[`${name}->${kvp.key}`] = kvp.description;\n            }\n        }\n    });\n    return {\n        key: name, value, description\n    }\n}\n\n/**\n * returns a key value pait from a field, optional description\n * @param node\n * @param ignoreFields\n */\nexport function getFieldKVP(node, ignoreFields: Mapper) {\n    const name = getName(node);\n    const value = getType(node);\n\n    if (!ignoreFields[name]) {\n        return {\n            key: name,\n            value,\n            description: getDescription(node)\n        };\n    }\n}\n\n/**\n * converts an array to an object that maps strings to booleans, to allow faster lookup in the array\n * @param arr\n */\nexport function arrayToTruthMapper(arr: Array<string>): Mapper {\n    const output = {};\n    arr.forEach((s) => {\n        output[s] = true;\n    });\n    return output;\n}\n\n/**\n * gets the options out of a defined type (our custom defined types):\n * graphql `name: String!` our type `string!` the typescript type `name: string`\n * graphql `name: String` our type `string` the typescript type `name: ?string`\n * @param type\n */\nexport function getTypeOptions(type) {\n    if (type.endsWith('!')) {\n        return {\n            type: type.substring(0, type.lastIndexOf('!')),\n            required: true\n        };\n    } else {\n        return {\n            type,\n            required: false\n        };\n    }\n}\n","import {collectGQLTypeDefs} from \"./helpers/files\";\nimport {GqlToTSConfig, GqlToTSFilesConfig, IKVP} from \"./helpers/types\";\nimport {arrayToTruthMapper, getEnumKVP, getObjectKVP} from \"./helpers/gqlNodeTools\";\nimport {TypescriptFileWriter} from \"./helpers/TypescriptFileWriter\";\n\nconst defaultsDeep = require('lodash/defaultsDeep');\n\nconst defaultOptions = {\n    scalars: {},\n    ignoreFields: ['_empty'],\n    ignoreTypes: [],\n    namespace: 'GQLTypes',\n    outputFile: 'GQLTypes.ts',\n    silent: false\n};\n\nconst fileMessage = `/*\n*****************************************************\n* This file was auto generated by gql-to-typescript *\n*                  Type everything!                 *\n*****************************************************\n*/`;\n\nexport const getDefaultOption = () => Object.assign({}, defaultOptions);\n\nexport function convertFiles(matcher, options:GqlToTSFilesConfig = {}) {\n    return collectGQLTypeDefs(matcher)\n        .then((typeDefs) => {\n            return convert(Object.assign(options, {typeDefs}))\n        });\n}\n\nexport function convert(options: GqlToTSConfig) {\n    const {typeDefs, scalars, ignoreFields, ignoreTypes, silent} = defaultsDeep(options, defaultOptions);\n\n    const ignoreMap = arrayToTruthMapper([...ignoreTypes, ...ignoreFields]);\n    const typedValues = defaultsDeep({\n        Boolean: 'boolean',\n        String: 'string',\n        ID: 'string|number',\n        Int: 'number',\n        Float: 'number'\n    }, scalars);\n\n    const state = {};\n    const descriptionState = {};\n\n    function assignToState(kvp: IKVP) {\n        const { key, value, description } = kvp;\n        if (state[key]) {\n            return defaultsDeep(state, { [key]: value })\n        }\n        // assign this as a new type\n        if (!typedValues[key]) {\n            typedValues[key] = key;\n        }\n\n        defaultsDeep(descriptionState, description);\n        state[key] = value;\n        return;\n    }\n\n    typeDefs.forEach(doc => {\n        doc.definitions.forEach((node) => {\n            switch (node.kind) {\n                case 'ObjectTypeDefinition':\n                case 'InputObjectTypeDefinition':\n                case 'ObjectTypeExtension':\n                    assignToState(getObjectKVP(node, ignoreMap));\n                    break;\n                case 'EnumTypeDefinition':\n                    assignToState(getEnumKVP(node));\n                    break;\n                default:\n                    return;\n            }\n        })\n    });\n\n    const writer = new TypescriptFileWriter(options, typedValues, fileMessage);\n    Object.entries(state).forEach(([key, value]) => {\n        if (Array.isArray(value)) {\n            writer.writeEnum(key, value,descriptionState);\n        } else {\n            writer.writeInterface(key, value, descriptionState);\n        }\n    });\n    return writer.finish(silent);\n}\n","module.exports = require(\"fs\");","module.exports = __WEBPACK_EXTERNAL_MODULE_glob__;","module.exports = __WEBPACK_EXTERNAL_MODULE_graphql_tag__;","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash_defaultsDeep__;","module.exports = require(\"path\");"],"sourceRoot":""}